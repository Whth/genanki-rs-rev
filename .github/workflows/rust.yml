name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 14 * * *'

env:
  CARGO_TERM_COLOR: always
  PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv with Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v6
        with:
          version: latest
          python-version: ${{ matrix.python-version }}

      - name: Install nightly rust
        run: rustup default nightly

      - name: Cache cargo registry
        id: cache-registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-v1
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Create virtual environment
        run: uv venv --python ${{ matrix.python-version }}

      - name: install anki
        run: |
          uv pip install anki
        shell: bash

      - name: Build
        run: cargo build

      - name: Run tests

        run: |
          source .venv/bin/activate
          cargo test --lib

        shell: bash